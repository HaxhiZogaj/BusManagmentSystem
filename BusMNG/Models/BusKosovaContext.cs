// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace BusMNG.Models;

public partial class BusKosovaContext : DbContext
{
    public BusKosovaContext(DbContextOptions<BusKosovaContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Biletat> Biletats { get; set; }

    public virtual DbSet<Bus> Buses { get; set; }

    public virtual DbSet<ContactMessage> ContactMessages { get; set; }

    public virtual DbSet<Oraret> Orarets { get; set; }

    public virtual DbSet<Pasagjerët> Pasagjerëts { get; set; }

    public virtual DbSet<Rezervimet> Rezervimets { get; set; }

    public virtual DbSet<Rrugët> Rrugëts { get; set; }

    public virtual DbSet<Shoferët> Shoferëts { get; set; }

    public virtual DbSet<SocialLogin> SocialLogins { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserSession> UserSessions { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Biletat>(entity =>
        {
            entity.HasKey(e => e.BiletaId).HasName("PK__Biletat__9E740C6DD26FA129");

            entity.ToTable("Biletat");

            entity.HasIndex(e => e.NumriBiletës, "UQ__Biletat__676BE94C50E968F9").IsUnique();

            entity.Property(e => e.BiletaId).HasColumnName("BiletaID");
            entity.Property(e => e.DataLëshimit)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.NumriBiletës)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.RezervimiId).HasColumnName("RezervimiID");
            entity.Property(e => e.Çmimi).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Rezervimi).WithMany(p => p.Biletats)
                .HasForeignKey(d => d.RezervimiId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Biletat__Rezervi__4F7CD00D");
        });

        modelBuilder.Entity<Bus>(entity =>
        {
            entity.HasKey(e => e.BusId).HasName("PK__Buses__6A0F6095ADBCB1D3");

            entity.HasIndex(e => e.NumriTargës, "UQ__Buses__A5447F671EF6098C").IsUnique();

            entity.Property(e => e.BusId).HasColumnName("BusID");
            entity.Property(e => e.DataKrijimit)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.NumriTargës)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Statusi).HasMaxLength(20);
        });

        modelBuilder.Entity<ContactMessage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ContactM__3214EC079F7E2E80");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Message).IsRequired();
            entity.Property(e => e.Subject).HasMaxLength(150);
        });

        modelBuilder.Entity<Oraret>(entity =>
        {
            entity.HasKey(e => e.OrariId).HasName("PK__Oraret__9849076D5B26FF0F");

            entity.ToTable("Oraret");

            entity.Property(e => e.OrariId).HasColumnName("OrariID");
            entity.Property(e => e.BusId).HasColumnName("BusID");
            entity.Property(e => e.DataKrijimit)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.KohaArritjes).HasColumnType("datetime");
            entity.Property(e => e.KohaNisjes).HasColumnType("datetime");
            entity.Property(e => e.RrugaId).HasColumnName("RrugaID");
            entity.Property(e => e.Statusi).HasMaxLength(20);

            entity.HasOne(d => d.Bus).WithMany(p => p.Orarets)
                .HasForeignKey(d => d.BusId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Oraret__BusID__3F466844");

            entity.HasOne(d => d.Rruga).WithMany(p => p.Orarets)
                .HasForeignKey(d => d.RrugaId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Oraret__RrugaID__403A8C7D");
        });

        modelBuilder.Entity<Pasagjerët>(entity =>
        {
            entity.HasKey(e => e.PasagjeriId).HasName("PK__Pasagjer__B8624AD8A0DD5456");

            entity.ToTable("Pasagjerët");

            entity.HasIndex(e => e.Email, "UQ__Pasagjer__A9D105347A2CD81C").IsUnique();

            entity.Property(e => e.PasagjeriId).HasColumnName("PasagjeriID");
            entity.Property(e => e.DataKrijimit)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Emri)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.NumriTelefonit)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<Rezervimet>(entity =>
        {
            entity.HasKey(e => e.RezervimiId).HasName("PK__Rezervim__6F6B8C2B6B948D1E");

            entity.ToTable("Rezervimet");

            entity.Property(e => e.RezervimiId).HasColumnName("RezervimiID");
            entity.Property(e => e.DataKrijimit)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OrariId).HasColumnName("OrariID");
            entity.Property(e => e.PasagjeriId).HasColumnName("PasagjeriID");
            entity.Property(e => e.Statusi).HasMaxLength(20);

            entity.HasOne(d => d.Orari).WithMany(p => p.Rezervimets)
                .HasForeignKey(d => d.OrariId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Rezervime__Orari__49C3F6B7");

            entity.HasOne(d => d.Pasagjeri).WithMany(p => p.Rezervimets)
                .HasForeignKey(d => d.PasagjeriId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Rezervime__Pasag__48CFD27E");
        });

        modelBuilder.Entity<Rrugët>(entity =>
        {
            entity.HasKey(e => e.RrugaId).HasName("PK__Rrugët__015BDAD49B34403F");

            entity.ToTable("Rrugët");

            entity.Property(e => e.RrugaId).HasColumnName("RrugaID");
            entity.Property(e => e.DataKrijimit)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Destinacioni)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Distanca).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.Origjina)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<Shoferët>(entity =>
        {
            entity.HasKey(e => e.ShoferiId).HasName("PK__Shoferët__79DD1C4977B07D65");

            entity.ToTable("Shoferët");

            entity.HasIndex(e => e.NumriLicencës, "UQ__Shoferët__F59B0542561FE90F").IsUnique();

            entity.Property(e => e.ShoferiId).HasColumnName("ShoferiID");
            entity.Property(e => e.BusId).HasColumnName("BusID");
            entity.Property(e => e.DataKrijimit)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Emri)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.NumriLicencës)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Bus).WithMany(p => p.Shoferëts)
                .HasForeignKey(d => d.BusId)
                .HasConstraintName("FK__Shoferët__BusID__5441852A");
        });

        modelBuilder.Entity<SocialLogin>(entity =>
        {
            entity.HasKey(e => e.SocialLoginId).HasName("PK__SocialLo__86296103CB86F269");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Provider)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.ProviderKey)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.User).WithMany(p => p.SocialLogins)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK_SocialLogins_Users");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CC4C810A4BE1");

            entity.HasIndex(e => e.Email, "UQ__Users__A9D1053486F32427").IsUnique();

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.PasswordHash)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.PasswordSalt)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Role)
              .IsRequired()
              .HasMaxLength(255);
        });

        modelBuilder.Entity<UserSession>(entity =>
        {
            entity.HasKey(e => e.SessionId).HasName("PK__UserSess__C9F4929076AC942A");

            entity.Property(e => e.SessionId).HasDefaultValueSql("(newid())");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ExpiresAt).HasColumnType("datetime");
            entity.Property(e => e.IsValid).HasDefaultValue(true);
            entity.Property(e => e.TokenHash)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.User).WithMany(p => p.UserSessions)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK_UserSessions_Users");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}